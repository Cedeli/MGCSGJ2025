[gd_scene load_steps=21 format=3 uid="uid://cwjgghgi0qcgc"]

[ext_resource type="PackedScene" uid="uid://dqsf2uo1bqci8" path="res://Input/InputManager.tscn" id="1_kln2b"]
[ext_resource type="PackedScene" uid="uid://dsix13euckuf1" path="res://Entity/CelestialBody.tscn" id="1_r150o"]
[ext_resource type="PackedScene" uid="uid://7w733f1revd7" path="res://Entity/Planet/Planet.tscn" id="2_v4o6y"]
[ext_resource type="Shader" uid="uid://dlewbbs8byb86" path="res://Assets/Shaders/Space/space.gdshader" id="3_xvyy0"]
[ext_resource type="PackedScene" uid="uid://cfdmshqym6x8y" path="res://Entity/Player/Player.tscn" id="5_pbw6q"]

[sub_resource type="ShaderMaterial" id="ShaderMaterial_space_sky"]
shader = ExtResource("3_xvyy0")
shader_parameter/vertical_sections = 21
shader_parameter/star_size = 0.02
shader_parameter/star_falloff = 4.0
shader_parameter/margin = 0.05

[sub_resource type="Sky" id="Sky_idj7w"]
sky_material = SubResource("ShaderMaterial_space_sky")

[sub_resource type="Environment" id="Environment_kln2b"]
background_mode = 1
background_energy_multiplier = 0.0
sky = SubResource("Sky_idj7w")
ambient_light_source = 3
ambient_light_color = Color(1, 1, 1, 1)
ambient_light_energy = 0.1
tonemap_mode = 2
ssao_enabled = true
glow_enabled = true
volumetric_fog_density = 0.005

[sub_resource type="SphereMesh" id="SphereMesh_r150o"]
resource_local_to_scene = true
radius = 250.0
height = 500.0

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_idj7w"]
albedo_color = Color(1, 0, 0, 1)
emission_enabled = true
emission = Color(0.901961, 0.439216, 0.0509804, 1)
emission_energy_multiplier = 2.0
rim_enabled = true
rim = 0.07

[sub_resource type="SphereShape3D" id="SphereShape3D_kln2b"]
resource_local_to_scene = true
radius = 250.0

[sub_resource type="Shader" id="Shader_v1gob"]
code = "
				shader_type spatial;
				render_mode blend_mix, depth_draw_opaque, cull_back;

				uniform vec4 base_color : source_color = vec4(0.0, 0.0, 1.0, 1.0);
				uniform vec4 secondary_color : source_color = vec4(0.0, 1.0, 0.0, 1.0);
				uniform float color_blend : hint_range(0.0, 1.0) = 0.5;
				uniform float roughness : hint_range(0.0, 1.0) = 0.8;
				uniform float metallic : hint_range(0.0, 1.0) = 0.0;
				uniform float detail_noise_scale : hint_range(1.0, 100.0) = 20.0;
				uniform float detail_noise_intensity : hint_range(0.0, 1.0) = 0.15;

				varying float v_height_normalized;

				float hash31(vec3 p3) {
					p3 = fract(p3 * vec3(.1031, .1030, .0973));
					p3 += dot(p3, p3.yzx + 33.33);
					return fract((p3.x + p3.y) * p3.z);
				}

				void vertex() {
					v_height_normalized = COLOR.r;
				}

				void fragment() {
					float blend_factor = pow(v_height_normalized, 1.5);
					blend_factor *= color_blend;
					blend_factor = clamp(blend_factor, 0.0, 1.0);
					vec4 color = mix(base_color, secondary_color, blend_factor);

					vec3 world_pos_scaled = VERTEX * detail_noise_scale;
					float noise_value = hash31(world_pos_scaled);
					float noise_darken_factor = mix(1.0 - detail_noise_intensity, 1.0, noise_value);

					ALBEDO = color.rgb * noise_darken_factor;
					ROUGHNESS = roughness;
					METALLIC = metallic;
				}
			"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_jw32o"]
render_priority = 0
shader = SubResource("Shader_v1gob")
shader_parameter/base_color = Color(0.344097, 0.477948, 0.529675, 1)
shader_parameter/secondary_color = Color(0.721592, 0.716169, 0.749302, 1)
shader_parameter/color_blend = 0.574536
shader_parameter/roughness = 0.8
shader_parameter/metallic = 0.0
shader_parameter/detail_noise_scale = 49.4717
shader_parameter/detail_noise_intensity = 0.112154

[sub_resource type="Shader" id="Shader_pbw6q"]
code = "
				shader_type spatial;
				render_mode blend_add, depth_draw_never, cull_front, unshaded;

				uniform vec4 atmosphere_color : source_color = vec4(0.3, 0.5, 1.0, 1.0);
				uniform float density : hint_range(0.1, 10.0) = 1.0;
				uniform float falloff : hint_range(0.1, 10.0) = 4.0;

				void vertex() { }

				void fragment() {
					float fresnel = pow(1.0 - abs(dot(normalize(VERTEX - CAMERA_POSITION_WORLD), normalize(NORMAL))), falloff);
					ALBEDO = atmosphere_color.rgb;
					ALPHA = fresnel * density * atmosphere_color.a;
				}
			"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_v1gob"]
render_priority = 0
shader = SubResource("Shader_pbw6q")
shader_parameter/atmosphere_color = Color(0.558176, 0.702008, 0.869612, 1)
shader_parameter/density = 0.655307
shader_parameter/falloff = 6.19572

[sub_resource type="SphereMesh" id="SphereMesh_jw32o"]
radius = 57.2926
height = 114.585

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_50glp"]
transparency = 1
albedo_color = Color(0.173231, 0.272261, 0.446717, 0.751633)
roughness = 0.227599

[sub_resource type="SphereMesh" id="SphereMesh_vy5pj"]
radius = 48.4725
height = 96.945

[sub_resource type="Shader" id="Shader_50glp"]
code = "
				shader_type spatial;
				render_mode blend_mix, depth_draw_opaque, cull_back;

				uniform vec4 base_color : source_color = vec4(0.0, 0.0, 1.0, 1.0);
				uniform vec4 secondary_color : source_color = vec4(0.0, 1.0, 0.0, 1.0);
				uniform float color_blend : hint_range(0.0, 1.0) = 0.5;
				uniform float roughness : hint_range(0.0, 1.0) = 0.8;
				uniform float metallic : hint_range(0.0, 1.0) = 0.0;
				uniform float detail_noise_scale : hint_range(1.0, 100.0) = 20.0;
				uniform float detail_noise_intensity : hint_range(0.0, 1.0) = 0.15;

				varying float v_height_normalized;

				float hash31(vec3 p3) {
					p3 = fract(p3 * vec3(.1031, .1030, .0973));
					p3 += dot(p3, p3.yzx + 33.33);
					return fract((p3.x + p3.y) * p3.z);
				}

				void vertex() {
					v_height_normalized = COLOR.r;
				}

				void fragment() {
					float blend_factor = pow(v_height_normalized, 1.5);
					blend_factor *= color_blend;
					blend_factor = clamp(blend_factor, 0.0, 1.0);
					vec4 color = mix(base_color, secondary_color, blend_factor);

					vec3 world_pos_scaled = VERTEX * detail_noise_scale;
					float noise_value = hash31(world_pos_scaled);
					float noise_darken_factor = mix(1.0 - detail_noise_intensity, 1.0, noise_value);

					ALBEDO = color.rgb * noise_darken_factor;
					ROUGHNESS = roughness;
					METALLIC = metallic;
				}
			"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_vy5pj"]
render_priority = 0
shader = SubResource("Shader_50glp")
shader_parameter/base_color = Color(0.0952453, 0.233919, 0.209133, 1)
shader_parameter/secondary_color = Color(0.313471, 0.451654, 0.300476, 1)
shader_parameter/color_blend = 0.339264
shader_parameter/roughness = 0.9
shader_parameter/metallic = 0.0
shader_parameter/detail_noise_scale = 20.5899
shader_parameter/detail_noise_intensity = 0.0938174

[node name="Main" type="Node3D"]

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_kln2b")

[node name="InputManager" parent="." instance=ExtResource("1_kln2b")]

[node name="SolarSystem" type="Node3D" parent="."]

[node name="Sun" parent="SolarSystem" groups=["celestial_bodies"] instance=ExtResource("1_r150o")]
SurfaceGravity = 100.0
InitialMass = 4e+07
Radius = 250.0

[node name="MeshInstance3D" parent="SolarSystem/Sun" index="0"]
mesh = SubResource("SphereMesh_r150o")
surface_material_override/0 = SubResource("StandardMaterial3D_idj7w")

[node name="CollisionShape3D" parent="SolarSystem/Sun" index="1"]
shape = SubResource("SphereShape3D_kln2b")

[node name="OmniLight3D" type="OmniLight3D" parent="SolarSystem/Sun"]
light_color = Color(1, 0.87451, 0.67451, 1)
light_energy = 2048.0
light_specular = 1.0
shadow_enabled = true
shadow_blur = 5.0
omni_range = 8192.0

[node name="Earth" parent="SolarSystem" node_paths=PackedStringArray("OrbitParent") groups=["celestial_bodies"] instance=ExtResource("2_v4o6y")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3000, 0, 0)
NoiseScale = 1.75743
NoiseOctaves = 8
NoisePersistence = 0.379866
NoiseLacunarity = 2.12881
NoiseOffset = Vector3(734.737, -924.931, 690.814)
HeightScale = 4.97995
BaseColor = Color(0.344097, 0.477948, 0.529675, 1)
SecondaryColor = Color(0.721592, 0.716169, 0.749302, 1)
ColorBlend = 0.574536
DetailNoiseScale = 49.4717
DetailNoiseIntensity = 0.112154
AtmosphereColor = Color(0.614091, 0.707279, 0.808407, 1)
AtmosphereThickness = 0.144321
AtmosphereDensity = 2.36301
AtmosphereFalloff = 4.23719
WaterLevelOffsetFactor = -0.64058
WaterColor = Color(0.188967, 0.44424, 0.514484, 1)
WaterSpecular = 0.60937
WaterRoughness = 0.0984314
WaterTransparency = 0.759981
SurfaceGravity = 25.0
OrbitParent = NodePath("../Sun")
AutoCalculateOrbitalVelocity = true
Radius = 50.0

[node name="PlanetVisualMeshInstance" type="MeshInstance3D" parent="SolarSystem/Earth"]
material_override = SubResource("ShaderMaterial_jw32o")

[node name="AtmosphereInstance" type="MeshInstance3D" parent="SolarSystem/Earth"]
sorting_offset = 1.0
material_override = SubResource("ShaderMaterial_v1gob")
cast_shadow = 0
mesh = SubResource("SphereMesh_jw32o")

[node name="WaterInstance" type="MeshInstance3D" parent="SolarSystem/Earth"]
sorting_offset = 0.5
material_override = SubResource("StandardMaterial3D_50glp")
cast_shadow = 0
mesh = SubResource("SphereMesh_vy5pj")

[node name="Moon" parent="SolarSystem" node_paths=PackedStringArray("OrbitParent") groups=["celestial_bodies"] instance=ExtResource("2_v4o6y")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3000, 0, 150)
NoiseScale = 1.20313
NoiseOctaves = 5
NoisePersistence = 0.483561
NoiseLacunarity = 2.4961
NoiseOffset = Vector3(203.681, -568.589, 369.21)
HeightScale = 0.558815
BaseColor = Color(0.0952453, 0.233919, 0.209133, 1)
SecondaryColor = Color(0.313471, 0.451654, 0.300476, 1)
ColorBlend = 0.339264
Roughness = 0.9
DetailNoiseScale = 20.5899
DetailNoiseIntensity = 0.0938174
HasAtmosphere = false
AtmosphereColor = Color(0.46752, 0.479259, 0.688709, 1)
AtmosphereThickness = 0.081623
AtmosphereDensity = 0.723599
AtmosphereFalloff = 4.83753
HasWater = false
WaterLevelOffsetFactor = -0.594058
WaterColor = Color(0.268302, 0.409713, 0.554783, 1)
WaterSpecular = 0.647933
WaterRoughness = 0.207263
WaterTransparency = 0.793065
SurfaceGravity = 1.6
OrbitParent = NodePath("../Earth")
AutoCalculateOrbitalVelocity = true
Radius = 15.0

[node name="PlanetVisualMeshInstance" type="MeshInstance3D" parent="SolarSystem/Moon"]
material_override = SubResource("ShaderMaterial_vy5pj")

[node name="Player" parent="." groups=["input_receivers"] instance=ExtResource("5_pbw6q")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 3002.45, 53.1324, 20.1345)

[editable path="SolarSystem/Sun"]
[editable path="SolarSystem/Earth"]
[editable path="SolarSystem/Moon"]
